{"version":3,"sources":["utils/util.js","components/Map.js","components/InfoBox.js","components/LineGraph.js","components/Table.js","components/Chat.js","App.js","index.js"],"names":["casesTypeColors","cases","hex","rgb","half_op","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","prettyPrintStat","stat","numeral","format","showDataOnMap","casesType","map","country","index","Circle","center","countryInfo","lat","long","color","fillColor","fillOpacity","radius","Math","sqrt","Tooltip","className","style","backgroundImage","flag","Map","countries","zoom","MapContainer","doubleClickZoom","scrollWheelZoom","TileLayer","attribution","url","InfoBox","title","total","active","isRed","props","Card","onClick","CardContent","Typography","gutterBottom","options","legend","display","elements","point","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","value","scales","xAxes","type","time","parser","tooltipFormat","yAxes","gridLines","ticks","callback","values","buildChartData","lastDataPoint","chartData","date","newDataPoint","x","y","push","LineGraph","useState","setData","useEffect","fetch","then","response","json","fetchData","length","datasets","backgroundColor","borderColor","Table","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","SignIn","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","signOut","ChatRoom","dummy","useRef","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","formValue","setFormValue","sendMessage","e","preventDefault","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","msg","ChatMessage","message","id","ref","onSubmit","onChange","target","placeholder","disabled","messageClass","src","alt","Chat","useAuthState","user","App","setInputCountry","setCountryInfo","setCountries","mapCountries","setMapCountries","tableData","setTableData","setCasesType","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","name","iso2","getCountriesData","onCountryChange","countryCode","FormControl","Select","variant","MenuItem","todayCases","todayRecovered","todayDeaths","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0c6460c.chunk.js","sourcesContent":["import React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Tooltip } from \"react-leaflet\";\nimport 'leaflet/dist/leaflet.css';\n\nconst casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    rgb: \"rgb(204, 16, 52)\",\n    half_op: \"rgba(204, 16, 52, 0.5)\",\n    multiplier: 200,\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    rgb: \"rgb(125, 215, 29)\",\n    half_op: \"rgba(125, 215, 29, 0.5)\",\n    multiplier: 600,\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    rgb: \"rgb(251, 68, 67)\",\n    half_op: \"rgba(251, 68, 67, 0.5)\",\n    multiplier: 1000,\n  },\n};\n\nexport const sortData = (data) => {\n  let sortedData = [...data];\n  sortedData.sort((a, b) => {\n    if (a.cases > b.cases) {\n      return -1;\n    } else {\n      return 1;\n    }\n  });\n  return sortedData;\n};\n\nexport const prettyPrintStat = (stat) =>\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\n\nexport const showDataOnMap = (data, casesType = \"cases\") => {\n  return data.map((country, index) => {\n      return (\n        <div key={index}>\n        <Circle\n          center={[country.countryInfo.lat, country.countryInfo.long]}\n          color={casesTypeColors[casesType].hex}\n          fillColor={casesTypeColors[casesType].hex}\n          fillOpacity={0.4}\n          radius={\n            Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\n          }\n        >\n        <Tooltip>\n          <div className=\"info-container\">\n            <div\n              className=\"info-flag\"\n              style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\n            ></div>\n            <div className=\"info-name\">{country.country}</div>\n            <div className=\"info-confirmed\">\n              Cases: {numeral(country.cases).format(\"0,0\")}\n            </div>\n            <div className=\"info-recovered\">\n              Recovered: {numeral(country.recovered).format(\"0,0\")}\n            </div>\n            <div className=\"info-deaths\">\n              Deaths: {numeral(country.deaths).format(\"0,0\")}\n            </div>\n          </div>\n        </Tooltip>\n        </Circle>\n        </div>\n      );\n  });\n};","import React from \"react\";\nimport { MapContainer, TileLayer } from \"react-leaflet\";\nimport { showDataOnMap } from \"../utils/util\";\nimport \"./Map.css\";\nimport 'leaflet/dist/leaflet.css';\n\nfunction Map({ countries, casesType, center, zoom }) {\n\treturn (\n\t\t<div className=\"map-container\">\n      <MapContainer\n        center={center}\n        zoom={zoom}\n        doubleClickZoom={true}\n        scrollWheelZoom={true}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n\n        {showDataOnMap(countries, casesType)}\n      </MapContainer>\n    </div>\n\t);\n}\n\nexport default Map;","import React from \"react\";\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\nimport \"./InfoBox.css\";\n\nfunction InfoBox({ title, cases, total, active, isRed, ...props }) {\n  return (\n    <Card\n      onClick={props.onClick}\n      className={`infoBox ${active && \"infoBox--selected\"} ${\n        isRed && \"infoBox--red\"\n      }`}\n    >\n      <CardContent>\n        <Typography color=\"textSecondary\" gutterBottom>\n          {title}\n        </Typography>\n        <h2 className={`infoBox__cases ${!isRed && \"infoBox__cases--green\"}`}>\n          {cases}\n        </h2>\n\n        <Typography className=\"infoBox__total\" color=\"textSecondary\">\n          {total} Total\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default InfoBox;","import React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\n\nconst options = {\n  legend: {\n    display: false,\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      },\n    },\n  },\n  scales: {\n    xAxes: [\n      {\n        type: \"time\",\n        time: {\n          parser: \"MM/DD/YY\",\n          tooltipFormat: \"ll\",\n        },\n      },\n    ],\n    yAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          // Include a dollar sign in the ticks\n          callback: function (value, index, values) {\n            return numeral(value).format(\"0a\");\n          },\n        },\n      },\n    ],\n  },\n};\n\nconst buildChartData = (data, casesType) => {\n  let chartData = [];\n  let lastDataPoint;\n  for (let date in data.cases) {\n    if (lastDataPoint) {\n      let newDataPoint = {\n        x: date,\n        y: data[casesType][date] - lastDataPoint,\n      };\n      chartData.push(newDataPoint);\n    }\n    lastDataPoint = data[casesType][date];\n  }\n  return chartData;\n};\n\nfunction LineGraph({ casesType }) {\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          let chartData = buildChartData(data, casesType);\n          setData(chartData);\n          // console.log(chartData);\n          // buildChart(chartData);\n        });\n    };\n\n    fetchData();\n  }, [casesType]);\n\n  return (\n    <div>\n      {data?.length > 0 && (\n        <Line\n          data={{\n            datasets: [\n              {\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n                borderColor: \"#CC1034\",\n                data: data,\n              },\n            ],\n          }}\n          options={options}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default LineGraph;","import React from \"react\";\nimport \"./Table.css\";\nimport numeral from \"numeral\";\n\nfunction Table({ countries }) {\n  return (\n    <div className=\"table-wrapper\">\n    <table>\n      <thead>\n        <tr>\n          <th>Countries</th>\n          <th>Cases</th>\n        </tr>\n      </thead>\n      <tbody>\n      {countries.map((country, index) => (\n        <tr key={index}>\n          <td>{country.country}</td>\n          <td>\n            <strong>{numeral(country.cases).format(\"0,0\")}</strong>\n          </td>\n        </tr>\n      ))}\n      </tbody>\n    </table>\n    </div>\n  );\n}\n\nexport default Table;","import { useRef, useState } from 'react';\nimport './Chat.css';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n// import 'firebase/analytics';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyAulNgNxgWjadotcq7RtNWUIx19cDXkoXs\",\n  authDomain: \"hello-firebase-65ab9.firebaseapp.com\",\n  projectId: \"hello-firebase-65ab9\",\n  storageBucket: \"hello-firebase-65ab9.appspot.com\",\n  messagingSenderId: \"759050800189\",\n  appId: \"1:759050800189:web:9662fd03d1e9c682c86e54\"\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n// const analytics = firebase.analytics();\n\n\nfunction Chat() {\n\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"Chat\">\n      <header>\n        <h2>Live Chat with Community</h2>\n        <h1>⚛️🔥💬</h1>\n        <SignOut />\n      </header>\n\n      <section>\n        {user ? <ChatRoom /> : <SignIn />}\n      </section>\n\n    </div>\n  );\n}\n\nfunction SignIn() {\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n\n  return (\n    <div className=\"signIn\">\n      <button className=\"sign-in-button\" onClick={signInWithGoogle}>Sign in with Google</button>\n      <p>Do not violate the community guidelines or you will be banned for life!</p>\n    </div>\n  )\n\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button className=\"sign-out\" onClick={() => auth.signOut()}>Sign Out</button>\n  )\n}\n\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n\n  const [messages] = useCollectionData(query, { idField: 'id' });\n\n  const [formValue, setFormValue] = useState('');\n\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    const { uid, photoURL } = auth.currentUser;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    })\n\n    setFormValue('');\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  return (<div>\n    <main>\n\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n\n      <span ref={dummy}></span>\n\n    </main>\n\n    <form onSubmit={sendMessage}>\n\n      <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"say something nice\" />\n\n      <button type=\"submit\" disabled={!formValue}>🕊️</button>\n\n    </form>\n  </div>)\n}\n\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL } = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n  return (\n    <div className={`message ${messageClass}`}>\n      <img src={photoURL || 'https://i.pinimg.com/originals/51/f6/fb/51f6fb256629fc755b8870c801092942.png'} alt='Avatar' />\n      <p>{text}</p>\n    </div>\n  )\n}\n\nexport default Chat;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Map from \"./components/Map\";\nimport { MenuItem, FormControl, Select,Card, CardContent} from \"@material-ui/core\";\nimport InfoBox from \"./components/InfoBox\";\nimport LineGraph from \"./components/LineGraph\";\nimport Table from \"./components/Table\";\nimport { sortData, prettyPrintStat } from \"./utils/util\";\nimport numeral from \"numeral\";\nimport Chat from \"./components/Chat\";\n\nconst App = () => {\n  const [country, setInputCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [countries, setCountries] = useState([]);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [mapCenter, setMapCenter] = useState({ lat: 15.4542, lng: 18.7322 });\n  const [mapZoom, setMapZoom] = useState(2);\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n          let sortedData = sortData(data);\n          setCountries(countries);\n          setMapCountries(data);\n          setTableData(sortedData);\n        });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async (e) => {\n    const countryCode = e.target.value;\n\n    const url = countryCode === \"worldwide\"\n      ? \"https://disease.sh/v3/covid-19/all\"\n      : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    if(countryCode === \"worldwide\") {\n      await fetch(url)\n        .then((response) => response.json())\n        .then((data) => {\n          setInputCountry(\"worldwide\");\n          setCountryInfo(data);\n          setMapCenter({ lat: 15.4542, lng: 18.7322 });\n          setMapZoom(2);\n        });\n    } else {\n      await fetch(url)\n        .then((response) => response.json())\n        .then((data) => {\n          setInputCountry(countryCode);\n          setCountryInfo(data);\n          setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n          setMapZoom(4);\n        });\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>COVID-19 Tracker</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              value={country}\n              onChange={onCountryChange}\n            >\n              <MenuItem key=\"worldwide\" value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem key={country.name} value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"app__stats\">\n          <InfoBox\n            onClick={(e) => setCasesType(\"cases\")}\n            title=\"Coronavirus Cases\"\n            isRed\n            active={casesType === \"cases\"}\n            cases={prettyPrintStat(countryInfo.todayCases)}\n            total={numeral(countryInfo.cases).format(\"0.0a\")} />\n          <InfoBox\n            onClick={(e) => setCasesType(\"recovered\")}\n            title=\"Recovered\"\n            active={casesType === \"recovered\"}\n            cases={prettyPrintStat(countryInfo.todayRecovered)}\n            total={numeral(countryInfo.recovered).format(\"0.0a\")} />\n          <InfoBox\n            onClick={(e) => setCasesType(\"deaths\")}\n            title=\"Deaths\"\n            isRed\n            active={casesType === \"deaths\"}\n            cases={prettyPrintStat(countryInfo.todayDeaths)}\n            total={numeral(countryInfo.deaths).format(\"0.0a\")} />\n        </div>\n        <Map \n          countries={mapCountries}\n          casesType={casesType}\n          center={mapCenter}\n          zoom={mapZoom}\n        />\n        <Chat />\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <div className=\"app__information\">\n            <h3>Worldwide new {casesType}</h3>\n            <LineGraph casesType={casesType} />\n            <h3>Live Cases by Country</h3>\n            <Table countries={tableData} />\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}